generate (exponential(1,0,60/4)) 	******генерируем заявку со средним промежутком времени 15 минут******
queue newq							******генерируем и заполняем очередь******
seize new 							******генерируем и заполняем блок обслуживания******
depart newq 						******очищаем очередь******
advance (exponential(1,0,10)) 		******имитируем время обслуживания в блоке******
release new 						******выводим заявку из блока обслуживания******
terminate 0 						******удаляем заявку******

generate 60000						******задаем время имитации модели******
terminate 1
start 1

newq storage 4						******вместо очереди создаем очередь с ограничением по размеру******
enter newq							******помещаем заявку в очередь******
leave newq							******вынимаем заявку из очереди******

Отчет о работе устройства:
FACILITY – название устройства;
ENTRIES – количество транзактов, прошедших через устройство;
UTIL . – вероятность загрузки устройства;
AVE . TIME – среднее время обработки одного транзакта устройством;
AVAIL . – состояние готовности устройства на момент конца моделирования (1 –готово к обслуживанию очередной заявки; 0 – не готово);
OWNER – номер последнего транзакта занимающего устройство (если не занималось, то значение 0);
PEND – количество транзактов, ожидающих устройство, и находящихся в режиме прерывания;
INTER – количество транзактов, прерывающих устройство в данный момент;
RETRY – количество транзактов, ожидающих специальных условий, зависящих от состояния объекта типа «устройство»;
DELAY – определяет количество транзактов, ожидающих занятия или освобождения устройства.

Статистика об очередях:
QUEUE – имя очереди;
MAX - максимальная длина очереди;
CONT . – текущая длина очереди;
ENTRY – общее количество входов;
ENTRY (0) - количество «нулевых» входов;
AVE . CONT . – средняя длина очереди;
AVE . TIME – среднее время пребывания транзактов в очереди;
AVE .(-0) – среднее время пребывания в очереди без учета «нулевых» входов;
RETRY – количество транзактов, ожидающих специальных условий.



код программы без комментариев:
для смо без ограничения очереди:

generate (exponential(1,0,60/4))
queue newq
seize new
depart newq
advance (exponential(1,0,10))
release new
terminate 0

generate 60000
terminate 1
start 1

для смо с ограниченной очередью:

newq storage 4
generate (exponential(1,0,60/4))
enter newq
seize new
leave newq
advance (exponential(1,0,10))
release new
terminate 0

generate 60000
terminate 1
start 1